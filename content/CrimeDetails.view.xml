<mvc:View controllerName="content.CrimeDetails"
	xmlns="sap.m"
	xmlns:core="sap.ui.core"
	xmlns:mvc="sap.ui.core.mvc"
	xmlns:viz="sap.viz.ui5.controls"
	xmlns:viz.feeds="sap.viz.ui5.controls.common.feeds"
	xmlns:viz.data="sap.viz.ui5.data"
	xmlns:html="http://www.w3.org/1999/xhtml">
	<!-- view content goes here -->
	<!-- this HTML paragraph is used as a spacer -->
	<html:p/>
	<Label
text="Select a date range"
labelFor="drs"
class="sapUiSmallMargin"/>
	<DateRangeSelection
id="drs"
displayFormat="dd.MM.yyyy"
width="220px"
change="handleChange"/>
	<html:p/>
	<!-- This is the text that we want to show -->
	<viz:VizFrame
id="barchart"
width="100%"
height="800px"
vizType="info/bar"
uiConfig="{
applicationSet:'fiori'
}"
vizProperties="{
plotArea:{dataLabel : {
visible : true
},
dataPointSize : {
min : 0,
max : 4
}
},
title: {
alignment :'left',
visible : true,
text : 'Property and violent crime by states'
}
}">
		<!-- the chart requires a flattened dataset with
dimensions and measurement data. Here we define the
different components of the dataset based on the
model that we're binding to the view over the data
property -->
		<viz:dataset>
			<viz.data:FlattenedDataset id="flattenedData" data="{/CrimeDetails}">
				<viz.data:dimensions>
					<viz.data:DimensionDefinition name="State" value="{STATE_ABBR}" />
				</viz.data:dimensions>
				<viz.data:measures>
					<viz.data:MeasureDefinition name="Property Crime" value="{PROPERTY_CRM_TTL}" />
					<viz.data:MeasureDefinition name="Violent Crime" value="{_VIOLENT_CRM_TTL_}" />
				</viz.data:measures>
			</viz.data:FlattenedDataset>
		</viz:dataset>
		<!-- the feed items are required to define the mapping between the odata
properties (values) and the axis (uid) -->
		<viz:feeds>
			<viz.feeds:FeedItem uid="valueAxis" type="Measure" values="Property Crime,Violent Crime"  />
			<viz.feeds:FeedItem uid="categoryAxis" type="Dimension" values="State" />
		</viz:feeds>
	</viz:VizFrame>
	
	<viz:Popover id="vizPopover"/>
		<!--Combo Box -->
		<MultiComboBox
			selectionChange="handleSelectionChange"
			selectionFinish="handleSelectionFinish"
			width="500px"
			items="{
				path: '/CrimeDetails',
				sorter: { path: 'STATE_ABBR' }
			}">
			<core:Item key="{STATE_ABBR}" text="{STATE_ABBR}" />
		</MultiComboBox>
</mvc:View>